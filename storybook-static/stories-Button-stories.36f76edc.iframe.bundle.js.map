{"version":3,"file":"stories-Button-stories.36f76edc.iframe.bundle.js","mappings":";;;;;;;;AA0CA;AACA;AACA;AACA;;;AAGA;AAIA;AAIA;;AAKA;;;;AAKA;AAGA;AAGA;;;;;;AAQA;AACA;AACA;;;;;AAKA;;AAIA","sources":["webpack://storybooks/./src/stories/Button.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport saveIcon from '../icon/icon-save.png';\nimport deleteIcon from '../icon/icon-delete.png';\n\n/** Primary UI component for user interaction */\nexport const Button = ({ \n  variant = 'default', \n  backgroundColor = null, \n  size = 'medium', \n  label, \n  icon = null, \n  isFullWidth = false, \n  onClick = () => {}, \n  ...props \n}) => {\n  return (\n    <StyledButton\n      type=\"button\"\n      variant={variant}\n      size={size}\n      style={backgroundColor && { backgroundColor }}\n      icon={icon}\n      isFullWidth={isFullWidth} \n      onClick={onClick}\n      {...props}\n    > \n      {label}\n    </StyledButton>\n  );\n};\n\n// Define the styled component with conditional styling based on props\nconst StyledButton = styled.button`\n  display: inline-block;\n  cursor: pointer;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-weight: 700;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  padding: 5px 10px;\n  width: ${({ isFullWidth }) => (isFullWidth ? '100%' : 'auto')};\n  height: ${({ size }) => (size === 'small' ? '22px' : size === 'large' ? '52px' : '40px')};\n  line-height: ${({ size }) => (size === 'small' ? '11px' : size === 'large' ? '22px' : '23px')};\n  font-size: ${({ size }) => (size === 'small' ? '12px' : size === 'large' ? '16px' : '14px')};\n\n  /* Style based on the variant prop */\n  background-color: ${({ variant }) => \n    variant === 'primary' ? '#1ea7fd' : \n    variant === 'secondary' ? '#f3f3f3' : \n    'transparent'};\n  color: ${({ variant }) => \n    variant === 'primary' ? 'white' : \n    variant === 'secondary' ? '#333' : \n    '#000'};\n  border-color: ${({ variant }) => \n    variant === 'primary' ? '#1ea7fd' : \n    variant === 'secondary' ? '#f3f3f3' : \n    '#ddd'};\n\n  box-shadow: ${({ variant }) => \n    variant === 'secondary' ? 'rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset' : 'none'};\n\n  &:disabled {\n    cursor: unset;\n    background-color: ${({ variant }) => \n      variant === 'primary' ? '#eee' : \n      variant === 'secondary' ? '#eee' : '#eee'};\n    border-color: ${({ variant }) => \n      variant === 'primary' ? '#ddd' : \n      variant === 'secondary' ? '#ddd' : '#ccc'};\n     color: ${({ variant }) => \n      variant === 'primary' ? '#ddd' : \n      variant === 'secondary' ? '#ddd' : '#ccc'};\n  }\n\n  /* iconBtn */\n  &::before {\n    content: '';\n    display: ${({ icon }) => (icon ? 'inline-block' : 'none')};\n    width: ${({ size }) => (size === 'small' ? '12px' : size === 'large' ? '20px' : '16px')};\n    height: ${({ size }) => (size === 'small' ? '12px' : size === 'large' ? '20px' : '16px')};\n    margin-right: 6px;\n    vertical-align: middle;\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-image: ${({ icon }) => \n      icon === 'save' ? `url(${saveIcon})` : \n      icon === 'delete' ? `url(${deleteIcon})` : 'none'};\n  }\n`;\n\nButton.propTypes = {\n  /** Button variant - default, primary, secondary */\n  variant: PropTypes.oneOf(['default', 'primary', 'secondary']),\n  /** What background color to use */\n  backgroundColor: PropTypes.string,\n  /** How large should the button be? */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /** Button contents */\n  label: PropTypes.string.isRequired,\n  /* icon 여부 */\n  icon: PropTypes.oneOf(['save', 'delete']),\n  /** Optional click handler */\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n"],"names":[],"sourceRoot":""}