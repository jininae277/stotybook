/*! For license information please see stories-Checkbox-stories.18d6cb6c.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkstorybooks=self.webpackChunkstorybooks||[]).push([[208],{"./src/stories/Checkbox.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,DisabledSelected:()=>DisabledSelected,Selected:()=>Selected,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Checkbox_stories});var react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Checkbox=_ref=>{let{label,checked,disabled,onChange,...props}=_ref;const[isChecked,setIsChecked]=(0,react.useState)(checked),id=props.id||`Checkbox-${Math.random().toString(36).substring(2,9)}`;return(0,jsx_runtime.jsxs)("div",{className:"checkbox-container",children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",id,checked:isChecked,onChange:()=>{if(disabled)return;const newChecked=!isChecked;setIsChecked(newChecked),onChange&&onChange(newChecked)},disabled,...props}),label&&(0,jsx_runtime.jsx)("label",{htmlFor:id,children:label})]})};Checkbox.defaultProps={checked:!1,disabled:!1,onChange:null},Checkbox.__docgenInfo={description:"Primary UI component for user interaction",methods:[],displayName:"Checkbox",props:{checked:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},onChange:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"func"},required:!1},label:{description:"",type:{name:"string"},required:!0}}};const Checkbox_stories={title:"Example/Checkbox",component:Checkbox,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{disabled:{control:"boolean",description:"체크박스가 비활성화된 상태인지 여부를 설정합니다."},label:{control:"text",description:"체크박스 옆에 표시될 라벨을 설정합니다."}}},Template=args=>{const[checked,setChecked]=(0,react.useState)(args.checked);return(0,jsx_runtime.jsx)(Checkbox,{...args,checked,onChange:newChecked=>{setChecked(newChecked)}})},Default=Template.bind({});Default.args={label:"Default",checked:!1,disabled:!1},Default.parameters={docs:{description:{story:"기본적으로 선택되지 않은 상태로 시작하며, 클릭하여 선택하거나 해제할 수 있습니다."}}};const Selected=Template.bind({});Selected.args={label:"Selected",checked:!0,disabled:!1},Selected.parameters={docs:{description:{story:"선택되었을때 상태를 표시합니다."}}};const Disabled=Template.bind({});Disabled.args={label:"Disabled",checked:!1,disabled:!0},Disabled.parameters={docs:{description:{story:"비활성화 상태로 시작하며, 클릭해도 변경되지 않습니다."}}};const DisabledSelected=Template.bind({});DisabledSelected.args={label:"Disabled Selected",checked:!0,disabled:!0},DisabledSelected.parameters={docs:{description:{story:"비활성화 상태에서 선택된 상태로 시작하며, 클릭해도 변경되지 않습니다."}}};const __namedExportsOrder=["Default","Selected","Disabled","DisabledSelected"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [checked, setChecked] = useState(args.checked);\n  const handleChange = newChecked => {\n    setChecked(newChecked);\n  };\n  return <Checkbox {...args} checked={checked} onChange={handleChange} />;\n}",...Default.parameters?.docs?.source}}},Selected.parameters={...Selected.parameters,docs:{...Selected.parameters?.docs,source:{originalSource:"args => {\n  const [checked, setChecked] = useState(args.checked);\n  const handleChange = newChecked => {\n    setChecked(newChecked);\n  };\n  return <Checkbox {...args} checked={checked} onChange={handleChange} />;\n}",...Selected.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => {\n  const [checked, setChecked] = useState(args.checked);\n  const handleChange = newChecked => {\n    setChecked(newChecked);\n  };\n  return <Checkbox {...args} checked={checked} onChange={handleChange} />;\n}",...Disabled.parameters?.docs?.source}}},DisabledSelected.parameters={...DisabledSelected.parameters,docs:{...DisabledSelected.parameters?.docs,source:{originalSource:"args => {\n  const [checked, setChecked] = useState(args.checked);\n  const handleChange = newChecked => {\n    setChecked(newChecked);\n  };\n  return <Checkbox {...args} checked={checked} onChange={handleChange} />;\n}",...DisabledSelected.parameters?.docs?.source}}}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);